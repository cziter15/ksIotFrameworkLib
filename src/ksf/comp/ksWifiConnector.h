/*
 *	Copyright (c) 2021-2022, Krzysztof Strehlau
 *
 *	This file is part of the ksIotFramework library.
 *	All licensing information can be found inside  LICENSE.md file
 *
 * 	https://github.com/cziter15/ksIotFrameworkLib/blob/master/LICENSE
 */
 
#pragma once

#include "../ksComponent.h"

namespace ksf
{
	namespace comps
	{
		class ksWifiConnector : public ksf::ksComponent
		{
			protected:
				uint32_t lastWifiCheckTime = 0;			//< Last WiFi connection check timestamp (ms since boot).
				uint32_t lastReconnectTryTime = 0;		//< Last WiFi reconnection timestamp (ms since boot).

				/*
					Configures MAC address for devices using ksIotFrameworkLib.
					This MAC is generated by using original ChipID / MAC, but starts with 0xFA 0xF1 and then there are four Chip ID bytes.
					0xFA 0xF1 works like prefix / signature to help identyfying devices in router properties / Wireshark (debugging) etc.
				*/
				void setupMacAddress();

			public:
				/*
					Constructs ksWifiConnector component.
					@param hostname - hostname to be used by WiFi class.
				*/
				ksWifiConnector(const char* hostname);

				/*
					Initializes ksWifiConnector component.
					@param owner - Pointer to owner composable (application).
					@return - true if init succedeed, otherwise false.
				*/
				virtual bool init(class ksf::ksComposable* owner) override;

				/*
					Handles WiFi connector component loop logic.
					@return - true on success, false on fail.
				*/
				virtual bool loop() override;
		};
	}
}